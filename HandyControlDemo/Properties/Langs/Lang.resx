<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Controls" xml:space="preserve">
    <value>控件</value>
  </data>
  <data name="Styles" xml:space="preserve">
    <value>样式模板</value>
  </data>
  <data name="Growl" xml:space="preserve">
    <value>信息通知</value>
  </data>
  <data name="GrowlInfo" xml:space="preserve">
    <value>今天的天气不错~~~</value>
  </data>
  <data name="GrowlSuccess" xml:space="preserve">
    <value>文件保存成功！</value>
  </data>
  <data name="GrowlWarning" xml:space="preserve">
    <value>磁盘空间快要满了！</value>
  </data>
  <data name="GrowlError" xml:space="preserve">
    <value>连接失败，请检查网络！</value>
  </data>
  <data name="GrowlFatal" xml:space="preserve">
    <value>程序已崩溃~~~</value>
  </data>
  <data name="GrowlAsk" xml:space="preserve">
    <value>检测到有新版本！是否更新？</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>加载条</value>
  </data>
  <data name="ImageBrowser" xml:space="preserve">
    <value>图片浏览器</value>
  </data>
  <data name="ColorPicker" xml:space="preserve">
    <value>颜色拾取器</value>
  </data>
  <data name="Carousel" xml:space="preserve">
    <value>轮播</value>
  </data>
  <data name="CompareSlider" xml:space="preserve">
    <value>对比滑块</value>
  </data>
  <data name="TimeBar" xml:space="preserve">
    <value>时间条</value>
  </data>
  <data name="Expander" xml:space="preserve">
    <value>展开框</value>
  </data>
  <data name="Pagination" xml:space="preserve">
    <value>页码条</value>
  </data>
  <data name="OpenImageBrowser" xml:space="preserve">
    <value>点击打开图片浏览器</value>
  </data>
  <data name="ProgressBar" xml:space="preserve">
    <value>进度条</value>
  </data>
  <data name="AnimationPath" xml:space="preserve">
    <value>动画路径</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>按钮</value>
  </data>
  <data name="ToggleButton" xml:space="preserve">
    <value>切换按钮</value>
  </data>
  <data name="TabControl" xml:space="preserve">
    <value>选项卡控件</value>
  </data>
  <data name="CheckBox" xml:space="preserve">
    <value>复选框</value>
  </data>
  <data name="TextBlock" xml:space="preserve">
    <value>文本块</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="Primary" xml:space="preserve">
    <value>主要</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>成功</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="Danger" xml:space="preserve">
    <value>危险</value>
  </data>
  <data name="ButtonOpacity" xml:space="preserve">
    <value>透明按钮</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="StepBar" xml:space="preserve">
    <value>步骤条</value>
  </data>
  <data name="Prev" xml:space="preserve">
    <value>上一步</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>填写基本信息</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>上传文件</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="Clock" xml:space="preserve">
    <value>时钟</value>
  </data>
  <data name="Calendar" xml:space="preserve">
    <value>日历</value>
  </data>
  <data name="DatePicker" xml:space="preserve">
    <value>日期选择器</value>
  </data>
  <data name="TimePicker" xml:space="preserve">
    <value>时间选择器</value>
  </data>
  <data name="TextBox" xml:space="preserve">
    <value>文本框</value>
  </data>
  <data name="ContentDemoStr" xml:space="preserve">
    <value>这是内容</value>
  </data>
  <data name="TitleDemoStr1" xml:space="preserve">
    <value>这是标题</value>
  </data>
  <data name="TitleDemoStr2" xml:space="preserve">
    <value>此项必填</value>
  </data>
  <data name="PlsEnterContent" xml:space="preserve">
    <value>请输入内容</value>
  </data>
  <data name="TitleDemoStr3" xml:space="preserve">
    <value>标题在左侧</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>正文</value>
  </data>
  <data name="SubTitle" xml:space="preserve">
    <value>子标题</value>
  </data>
  <data name="PasswordBox" xml:space="preserve">
    <value>密码框</value>
  </data>
  <data name="CirclePanel" xml:space="preserve">
    <value>圆形布局</value>
  </data>
  <data name="ComboBox" xml:space="preserve">
    <value>组合框</value>
  </data>
  <data name="NumericUpDown" xml:space="preserve">
    <value>数值选择控件</value>
  </data>
</root>